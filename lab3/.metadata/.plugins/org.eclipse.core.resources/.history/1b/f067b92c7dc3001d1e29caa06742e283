package lab3;

import java.util.ArrayList;
import java.util.List;

public class Main {
	public static void main(String[] args)
	{
		ArrayList<Double> numbers = new ArrayList<Double>();
		int length = 15;
		int a = -100;
		int b = 100;
		
		for (int i = 0; i < length; i++)
			numbers.add(Math.random() * (b - a) + a);
		
		ArrayList<Double> result = BucketSort(numbers, 10);
		
		for (int i = 0; i < length; i++)
			System.out.println(result.get(i));
	}

	public static ArrayList<Double> BucketSort(ArrayList<Double> array, int n)
	{	
		double minElem = array.get(0), maxElem = array.get(0);
		
		for (double elem : array)
		{
			if (elem < minElem)
				minElem = elem;
			
			if (elem > maxElem)
				maxElem = elem;
		}
		
		if (array.size() < 2 || minElem == maxElem)
			return array;
		
		List<ArrayList<Double>> buckets = new ArrayList<>();
		
		int index;
		
		for (double elem : array)
		{
			index = (int)(Math.floor(n * (elem - minElem)) / (maxElem - minElem + 1));
			buckets.get(index).add(elem);
		}

		for (ArrayList<Double> list : buckets)
		{
			if (list.size() <= 32)
				list = InsertionSort(list);
			else
				list = BucketSort(list, 10);
		}
		
		ArrayList<Double> sortedArray = new ArrayList<Double>();
		
		for (ArrayList<Double> bucket : buckets)
		{
			for (Double elem : bucket)
				sortedArray.add(elem);
		}
		
		return sortedArray;
	}
	
	public static ArrayList<Double> InsertionSort(ArrayList<Double> array)
	{
		double value;
		int index;

		for (int i = 1; i < array.size(); i++)
		{
			value = array.get(i);
			index = i;
			
			while (index > 0 && value < array.get(index - 1))
			{
				array.set(index, array.get(index - 1));
				index--;
			}
			
			array.set(index, value);
		}
		
		return array;
	}
}
